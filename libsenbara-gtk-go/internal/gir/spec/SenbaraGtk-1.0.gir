<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:doc="http://www.gtk.org/introspection/doc/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Adw" version="1"/>
  <include name="GObject" version="2.0"/>
  <include name="Gtk" version="4.0"/>
  <package name="gtk4"/>
  <package name="libadwaita-1"/>
  <doc:format name="unknown"/>
  <namespace name="SenbaraGtk"
             version="1.0"
             shared-library="libsenbara-gtk.so"
             c:identifier-prefixes="SenbaraGtk"
             c:symbol-prefixes="senbara_gtk">
    <class name="MainApplicationWindow"
           c:symbol-prefix="main_application_window"
           c:type="SenbaraGtkMainApplicationWindow"
           parent="Adw.ApplicationWindow"
           glib:type-name="SenbaraGtkMainApplicationWindow"
           glib:get-type="senbara_gtk_main_application_window_get_type">
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.Root"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new"
                   c:identifier="senbara_gtk_main_application_window_new">
        <doc xml:space="preserve"
             filename="main.h"
             line="22">Creates a new SenbaraGtkMainApplicationWindow.</doc>
        <source-position filename="main.h" line="29"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="main.h"
               line="27">A new SenbaraGtkMainApplicationWindow widget</doc>
          <type name="MainApplicationWindow"
                c:type="SenbaraGtkMainApplicationWindow*"/>
        </return-value>
      </constructor>
      <method name="show_toast"
              c:identifier="senbara_gtk_main_application_window_show_toast">
        <doc xml:space="preserve"
             filename="main.h"
             line="31">Shows a toast notification with the given message inside the window.</doc>
        <source-position filename="main.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="main.h"
                 line="33">a SenbaraGtkMainApplicationWindow</doc>
            <type name="MainApplicationWindow"
                  c:type="SenbaraGtkMainApplicationWindow*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="main.h"
                 line="34">the message to display in the toast</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="test-button-sensitive"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <glib:signal name="button-test-clicked" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <function name="init_types" c:identifier="senbara_gtk_init_types">
      <doc xml:space="preserve"
           filename="main.h"
           line="41">Initializes the senbara-gtk type system.
Call this before using any senbara-gtk widgets.</doc>
      <source-position filename="main.h" line="47"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
  </namespace>
</repository>
