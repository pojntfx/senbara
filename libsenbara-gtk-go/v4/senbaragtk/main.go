// Package senbaragtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package senbaragtk

import (
	"unsafe"

	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/pkg/core"
	"github.com/jwijenbergh/puregotk/v4/adw"
	"github.com/jwijenbergh/puregotk/v4/glib"
	"github.com/jwijenbergh/puregotk/v4/gobject"
	"github.com/jwijenbergh/puregotk/v4/gobject/types"
)

var xInitTypes func()

// Initializes the senbara-gtk type system.
// Call this before using any senbara-gtk widgets.
func InitTypes() {

	xInitTypes()

}

type MainApplicationWindow struct {
	adw.ApplicationWindow
}

var xMainApplicationWindowGLibType func() types.GType

func MainApplicationWindowGLibType() types.GType {
	return xMainApplicationWindowGLibType()
}

func MainApplicationWindowNewFromInternalPtr(ptr uintptr) *MainApplicationWindow {
	cls := &MainApplicationWindow{}
	cls.Ptr = ptr
	return cls
}

var xNewMainApplicationWindow func() uintptr

// Creates a new SenbaraGtkMainApplicationWindow.
func NewMainApplicationWindow() *MainApplicationWindow {
	var cls *MainApplicationWindow

	cret := xNewMainApplicationWindow()

	if cret == 0 {
		return nil
	}
	cls = &MainApplicationWindow{}
	cls.Ptr = cret
	return cls
}

var xMainApplicationWindowShowToast func(uintptr, string)

// Shows a toast notification with the given message inside the window.
func (x *MainApplicationWindow) ShowToast(MessageVar string) {

	xMainApplicationWindowShowToast(x.GoPointer(), MessageVar)

}

func (c *MainApplicationWindow) GoPointer() uintptr {
	if c == nil {
		return 0
	}
	return c.Ptr
}

func (c *MainApplicationWindow) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func (x *MainApplicationWindow) ConnectButtonTestClicked(cb *func(MainApplicationWindow)) uint32 {
	cbPtr := uintptr(unsafe.Pointer(cb))
	if cbRefPtr, ok := glib.GetCallback(cbPtr); ok {
		return gobject.SignalConnect(x.GoPointer(), "button-test-clicked", cbRefPtr)
	}

	fcb := func(clsPtr uintptr) {
		fa := MainApplicationWindow{}
		fa.Ptr = clsPtr
		cbFn := *cb

		cbFn(fa)

	}
	cbRefPtr := purego.NewCallback(fcb)
	glib.SaveCallback(cbPtr, cbRefPtr)
	return gobject.SignalConnect(x.GoPointer(), "button-test-clicked", cbRefPtr)
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("SENBARAGTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xInitTypes, lib, "senbara_gtk_init_types")

	core.PuregoSafeRegister(&xMainApplicationWindowGLibType, lib, "senbara_gtk_main_application_window_get_type")

	core.PuregoSafeRegister(&xNewMainApplicationWindow, lib, "senbara_gtk_main_application_window_new")

	core.PuregoSafeRegister(&xMainApplicationWindowShowToast, lib, "senbara_gtk_main_application_window_show_toast")

}
